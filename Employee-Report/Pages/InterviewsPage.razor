@page "/interviews"
@using Employee_Report.Model.Models
@inject NavigationManager navManager;

@if (interviewsDetails is null)
{
    <p><em>Loading your data... Please wait..</em></p>
}
else
{
    <div id="divHeader">
        <h3>Interviews</h3>
        @if (!IsHidden)
        {
            <SfButton id="sfBtnAddInterview" OnClick="AddClass">Add Interview</SfButton>
        }
    </div>
    <div class="@(IsHidden ? "show" : "hidden")">
        <EditForm Model="@InterviewModel" OnValidSubmit="addInterview">
            <DataAnnotationsValidator />
            <div class="form-control">
                <div class="row mt-2">
                    <div class="col-md-6">
                        <label Class="e-outline-date">Name</label>
                        <SfTextBox CssClass="e-outline" Type="InputType.Text" class="form-control" @bind-Value="InterviewModel.Name" />
                        <ValidationMessage For="@(() => InterviewModel.Name)" />
                    </div>
                    <div class="col-md-6">
                        <label Class="e-outline-date">SKill</label>
                        <SfTextBox CssClass="e-outline" Type="InputType.Text" class="form-control" @bind-Value="InterviewModel.Skill" />
                        <ValidationMessage For="@(() => InterviewModel.Skill)" />
                    </div>
                </div>

                <div class="row mt-2">
                    <div class="col-md-6">
                        <label Class="e-outline-date">Role</label>
                        <SfTextBox CssClass="e-outline" Type="InputType.Text" class="form-control" @bind-Value="InterviewModel.Role" />
                        <ValidationMessage For="@(() => InterviewModel.Role)" />
                    </div>
                    <div class="col-md-6">
                        <label Class="e-outline-date">Status</label>
                        <SfTextBox CssClass="e-outline" Type="InputType.Text" class="form-control" @bind-Value="InterviewModel.Status" />
                        <ValidationMessage For="@(() => InterviewModel.Status)" />
                    </div>
                </div>

                <div class="row mt-2">
                    <div class="col-md-6">
                        <label Class="e-outline-date">Interview Date</label>
                        <InputDate Type="InputDateType.Date" class="form-control" @bind-Value="InterviewModel.Date" />
                        <ValidationMessage For="@(() => InterviewModel.Date)" />
                    </div>
                    <div class="col-md-6">
                        <label Class="e-outline-date">Reporting To</label>
                        <SfTextBox CssClass="e-outline" Type="InputType.Text" class="form-control" @bind-Value="InterviewModel.ReportingTo" />
                        <ValidationMessage For="@(() => InterviewModel.ReportingTo)" />
                    </div>
                </div>
                <div id="SfBtns">
                    <SfButton @onclick="@AddClass" type="submit" class="btnAdd" Content="Add"></SfButton>
                    <SfButton @onclick="@AddClass" type="submit" class="btnCancel" Content="Cancel"></SfButton>
                </div>
            </div>
        </EditForm>
    </div>

    @if (!IsHidden)
    {
        <SfGrid DataSource="@interviewsDetails">
            <GridColumns>
            <GridColumn Field="@nameof(InterviewModel.Name)" HeaderText="Name" TextAlign="TextAlign.Center" Width="120"></GridColumn>
            <GridColumn Field="@nameof(InterviewModel.Skill)" HeaderText="Skill" TextAlign="TextAlign.Center" Width="120"></GridColumn>
            <GridColumn Field="@nameof(InterviewModel.Role)" HeaderText="Role" TextAlign="TextAlign.Center" Width="120"></GridColumn>
            <GridColumn Field="@nameof(InterviewModel.Status)" HeaderText="Status" TextAlign="TextAlign.Center" Width="150"></GridColumn>
            <GridColumn Field="@nameof(InterviewModel.Date)" HeaderText="Date" TextAlign="TextAlign.Center" Width="150"></GridColumn>
            <GridColumn Field="@nameof(InterviewModel.ReportingTo)" HeaderText="Repoting to" TextAlign="TextAlign.Center" Width="150"></GridColumn>
        </GridColumns>
    </SfGrid>
    }
}